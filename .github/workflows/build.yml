name: Build

on:
  push:
    branches:
      - main
      - users


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
     DB_URL_COVOIT: ${{ secrets.DB_URL_COVOIT }}
     DB_USER_COVOIT: ${{ secrets.DB_USER_COVOIT }}
     DB_PASS_COVOIT: ${{ secrets.DB_PASS_COVOIT }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=goegilles-fr_Gestion-des-transports_c8774846-d55c-408f-a6e1-fe79086912eb -Dsonar.projectName='Gestion-des-transports'
      # Docker build and push steps
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: penumbriel
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            penumbriel/covoit:latest
            penumbriel/covoit:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
